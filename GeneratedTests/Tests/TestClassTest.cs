using System;
using NUnit.Framework;
using ConsoleApp.Files;
using Moq;
using System.Collections.Generic;

[TestFixture]
class TestClassTest
{
    private Mock<IDependency> _dependency;
    private TestClass _testClass;
    [SetUp]
    public void SetUp()
    {
        _dependency = new Mock<IDependency>();
        _testClass = new TestClass(_dependency.Object);
    }

    [Test]
    public void IntService()
    {
        var entity = default(CustomEntity);
        var id = default(int);
        var actual = _testClass.IntService(entity, id);
        var expected = default(int);
        Assert.That(actual, Is.EqualTo(expected));
        Assert.Fail("autogenerated");
    }

    [Test]
    public void DoubleService()
    {
        var s = default(string);
        var actual = _testClass.DoubleService(s);
        var expected = default(double);
        Assert.That(actual, Is.EqualTo(expected));
        Assert.Fail("autogenerated");
    }

    [Test]
    public void StringService()
    {
        var l = default(long);
        var actual = _testClass.StringService(l);
        var expected = default(string);
        Assert.That(actual, Is.EqualTo(expected));
        Assert.Fail("autogenerated");
    }

    [Test]
    public void DateTimeService()
    {
        var actual = _testClass.DateTimeService();
        var expected = default(DateTime);
        Assert.That(actual, Is.EqualTo(expected));
        Assert.Fail("autogenerated");
    }

    [Test]
    public void VoidService()
    {
        _testClass.VoidService();
        Assert.Fail("autogenerated");
    }
}